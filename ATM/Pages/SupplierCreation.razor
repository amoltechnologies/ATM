@page "/SupplierCreation"
@inject SupplierService supplierservice
@inject StateService stateservice
@inject SupplierPlantService supplierplantservice
@inject Temp_SupplierPlantService temp_supplierplantservice
@inject ATM.Data.ApplicationDbContext _context
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Cards
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.DropDowns
@using ATM.Models
@using Microsoft.EntityFrameworkCore;


<head>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300&display=swap" rel="stylesheet">
</head> 


  <div class="col-12" style="background-color:blueviolet; border-radius:10px; border-bottom:double; border-left:double; border-bottom-color:#51005E">
        <h4 style="padding-left:1%; font-weight:600; padding-right:1%; padding-top:1%; color:white; font-size:17px">Let's create A Supplier</h4>
    </div><br /><br />

<EditForm Model=@supplier >
        <DataAnnotationsValidator />
        <FluentValidationValidator TValidator="SupplierFluentvalidation" />

    <div class="row">
        <div class=" margin col-md-3 col-lg-3;  ">
            <br />
            Supplier Name
            <br />
            <SfTextBox ID="SupplierName"  @bind-Value="supplier.SupplierName"></SfTextBox>

             <br />
       
        </div>
        <div class="margin col-md-3 col-lg-3" >
             <br />
         State
        <SfDropDownList  TValue="string" ID="state" TItem="State" @bind-Value="state_name" DataSource="@States">
            <DropDownListFieldSettings Value="StateName"></DropDownListFieldSettings>
             <DropDownListEvents TValue="string" TItem="State" ValueChange="showdata"></DropDownListEvents>
        </SfDropDownList> 
        <br />
        
         </div>
        <div class=" margin col-md-3 col-lg-3;  ">
            <br />
            City
            <br />
           <SfTextBox   ID="City"  @bind-Value="supplier.City"></SfTextBox>
           <br />
        </div>
       
     </div>
     <div class="row">
         <div class=" margin col-md-3 col-lg-3;  ">
            <br />
            Address
             <SfTextBox Multiline=true  ID="Address"  @bind-Value="supplier.Address"></SfTextBox>
        </div>
         <div class="margin col-md-3 col-lg-3 col-sm-3; ">
             <br />
            
         Pincode
             <SfTextBox   ID="Pincode"  @bind-Value="supplier.PINCode"></SfTextBox>
             <br />
         </div>
          <div class="margin col-md-3 col-lg-3 col-sm-3;  ">
             <br />
            Email ID
             <SfTextBox   ID="Pincode" @bind-Value="supplier.SupplierEmailID"  ></SfTextBox>
             <br />
            </div>

     </div>
     <div class="row">
         @* <div class=" margin col-md-3">
             <ValidationMessage For="@(() => supplier.SupplierName)" ></ValidationMessage>
       
         </div>*@
        
          <div class=" margin col-md-3">
             <ValidationMessage For="@(() => supplier.SupplierName)" ></ValidationMessage>
     
         </div>
           <div class=" margin col-md-3">
             <ValidationMessage For="@(() => supplier.PINCode)" ></ValidationMessage>
          
         </div>
     </div>
     
     <div class="row">
             <div class=" margin col-md-3 col-lg-3 col-sm-3;  ">
            <br />
            Primary Contact Name      
            <SfTextBox ID="SupplierName"  @bind-Value="supplier.PrimaryContactPersonName"></SfTextBox>
             <br />
       
            </div>
            <div class="margin col-md-3 col-lg-3 col-sm-3;  ">
             <br />
            Primary Contact No.
                   <SfTextBox ID="SupplierName" @bind-Value="supplier.PrimaryContactPersonContact"></SfTextBox>

             <br />
            </div>
            <div class="margin col-md-3 col-lg-3 col-sm-3;  ">
             <br />
            Opening Balance
            <SfNumericTextBox TValue="decimal" @bind-Value="supplier.OpeningBalance"  ></SfNumericTextBox>
             <br />
            </div>
     </div>
     <div class="row">
          <div class=" margin col-md-3">
             <ValidationMessage For="@(() => supplier.PrimaryContactPersonName)" ></ValidationMessage>
       
         </div>
        
          <div class=" margin col-md-3">
             <ValidationMessage For="@(() => supplier.PrimaryContactPersonContact)" ></ValidationMessage>
     
         </div>
           <div class=" margin col-md-3">
             <ValidationMessage For="@(() => supplier.OpeningBalance)" ></ValidationMessage>
          
         </div>
     </div>

      <div class="row">
             <div class=" margin col-md-3 col-lg-3 col-sm-3;  ">
            <br />
            GST No.
            <SfTextBox ID="SupplierName"  @bind-Value="supplier.GSTNo"></SfTextBox>
             <br />
       
            </div>
            <div class="margin col-md-3 col-lg-3 col-sm-3;  ">
             <br />
            PAN No.
            <SfTextBox ID="SupplierName" @bind-Value="supplier.PANNo"></SfTextBox>

             <br />
            </div>
            <div class="margin col-md-3 col-lg-3 col-sm-3;  ">
            </div>
           
     </div>
      <div class="row">
          <div class=" margin col-md-3">
             <ValidationMessage For="@(() => supplier.GSTNo)" ></ValidationMessage>
       
         </div>
        
          <div class=" margin col-md-3">
             <ValidationMessage For="@(() => supplier.PANNo)" ></ValidationMessage>
     
         </div>
          @* <div class=" margin col-md-3">
             <ValidationMessage For="@(() => supplier.SupplierEmailID)" ></ValidationMessage>
          
         </div>*@
     </div>

</EditForm>
  
  <br /><br />

<div class="col-12" style="background-color:blueviolet; border-radius:10px; border-bottom:double; border-left:double; border-bottom-color:#51005E">
        <h4 style="padding-left:1%; font-weight:600; padding-right:1%; padding-top:1%; color:white; font-size:17px"> Add Supplier Plant</h4>
    </div><br />                  
     <div class="row">
         <div class="row">
                        <div class=" margin col-md-3  ">
                            <br />
                           Plant Name
                           <SfTextBox  ID="PlantNamere" @bind-Value="temp_supplierplant.SupplierPlantName" ></SfTextBox>
                         </div>
                         <div class=" margin col-md-3  ">
                            <br />
                           Plant Address
                           <SfTextBox  ID="PlantAddress" @bind-Value="temp_supplierplant.SupplierPlantAddress" ></SfTextBox>

                        </div>
                         <div class=" margin  col-md-3 ">
                            <br />
                            Plant City
                           <SfTextBox  ID="PlantCity" @bind-Value="temp_supplierplant.SupplierPlantCity" ></SfTextBox>
                         </div>
                </div>

            <div class="row">
                        <div class=" margin col-md-3  ">
                            <br />
                          Plant state
@*                        <SfTextBox  ID="PlantState" @bind-Value="temp_supplierplant.SupplierPlantState" ></SfTextBox>*@ 
                        <SfDropDownList  TValue="string" ID="splantstate" TItem="State" @bind-Value="plant_state_name" DataSource="@States">
                        <DropDownListFieldSettings Value="StateName"></DropDownListFieldSettings>
                        <DropDownListEvents TValue="string" TItem="State" ValueChange="showdata1"></DropDownListEvents>
                        </SfDropDownList> 

                       </div>
                         <div class=" margin col-md-3  ">
                            <br />
                         Plant Pincode
                         <SfTextBox  ID="PlantPincode" @bind-Value="temp_supplierplant.SupplierPlantPincode" ></SfTextBox>


                        </div>
                         <div class=" margin  col-md-3 ">
                            <br />
                        Plant PAN Number
                        <SfTextBox  ID="PlantPANno" @bind-Value="temp_supplierplant.SupplierplantPANNo" ></SfTextBox>
                        </div>
            </div>
            <div class="row">
                        <div class=" margin col-md-3  ">
                        <br />
                         Plant GST Number
                        <SfTextBox  ID="PlantGSTNo" @bind-Value="temp_supplierplant.SupplierPlantGSTNo" ></SfTextBox>

                        </div>
                         <div class=" margin col-md-3  ">
                        <br />
                        Opening Balance
                        <SfNumericTextBox TValue="decimal?" @bind-Value=temp_supplierplant.SupplierPlantOpeningBalance ></SfNumericTextBox>
                        <br />
                        </div>
                        <div class=" margin  col-md-3 ">
                        <br />
                        Contact Person Name
                        <SfTextBox  ID="ContactPersonName" @bind-Value="temp_supplierplant.SupplierPlantContactPersonName" ></SfTextBox>
                       <br />
                        </div>
            </div>
             <div class="row">
                         <div class=" margin  col-md-3 ">
                             <br />
                         Contact Number
                         <SfTextBox  ID="ContactNumber" @bind-Value="temp_supplierplant.SupplierPlantContactNumber " ></SfTextBox>
                         <br />
                         </div>
                          <div class=" margin  col-md-3 ">
                              <br />
                            Email ID
                         <SfTextBox  ID="EmailID" @bind-Value="temp_supplierplant.SupplierPlantEmailID " ></SfTextBox>
                         <br />
                         </div>
                          <div class=" margin  col-md-3 ">
                              <br />

                              <br />
                         </div>
             </div>
             <div class="row">
             <div class=" margin col-md-3 col-lg-3 col-sm-3;  ">
            <br />
         
            </div>
            <div class="margin col-md-3 col-lg-3 col-sm-3;  " style="text-align:center">
             <br />
            
                <button  class="btn btn-primary e-btn:hover e-success" style="background-color:blueviolet; border-radius:10px; color:aliceblue; margin-bottom:40px;" @onclick="HandleValidSubmit1">
                 Add Supplier Plant</button>
 
            </div>
            <div class="margin col-md-3 col-lg-3 col-sm-3; ">
             <br />
           </div>
            </div>
       
     </div>

 <br />
<div class="col-12" style="background-color:blueviolet; border-radius:10px; border-bottom:double; border-left:double; border-bottom-color:#51005E">
        <h4 style="padding-left:1%; font-weight:600; padding-right:1%; padding-top:1%; color:white; font-size:17px">  Supplier Plant Summary</h4>
    </div><br />
  <div style="margin-left:auto; margin-right:auto;">

<SfGrid ID="Temp_SupplierGrid"  Width="auto" 
       DataSource="@Temp_SupplierPlants">
    <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true">
    </GridEditSettings>
    <GridPageSettings PageSize="5"></GridPageSettings>
    <GridEvents   TValue="Temp_SupplierPlant">
    </GridEvents>
    <GridColumns>
        <GridColumn Field="@nameof(Temp_SupplierPlant.SupplierPlantId)" Width="160" HeaderText="Sr.No." AllowFiltering="true"></GridColumn>

        <GridColumn Field="@nameof(Temp_SupplierPlant.SupplierPlantName)" Width="160" HeaderText="Plant Name" AllowFiltering="true"></GridColumn>
        <GridColumn Field="@nameof(Temp_SupplierPlant.SupplierPlantAddress)" Width="160" HeaderText="Plant Address" AllowFiltering="true"></GridColumn>
        <GridColumn Field="@nameof(Temp_SupplierPlant.SupplierPlantCity)" Width="160" HeaderText="City" AllowFiltering="true"></GridColumn>
        <GridColumn Field="@nameof(Temp_SupplierPlant.SupplierPlantState)" Width="160" HeaderText="State" AllowFiltering="true"></GridColumn>
        <GridColumn Field="@nameof(Temp_SupplierPlant.SupplierPlantPincode)" Width="160" HeaderText="Pincode" AllowFiltering="true"></GridColumn>
        <GridColumn Field="@nameof(Temp_SupplierPlant.SupplierplantPANNo)" Width="160" HeaderText="PAN No." AllowFiltering="true"></GridColumn>
        <GridColumn Field="@nameof(Temp_SupplierPlant.SupplierPlantGSTNo)" Width="160" HeaderText="GST No." AllowFiltering="true"></GridColumn>
        <GridColumn Field="@nameof(Temp_SupplierPlant.SupplierPlantOpeningBalance)" Width="160" HeaderText="Opening Balance" AllowFiltering="true"></GridColumn>
        <GridColumn Field="@nameof(Temp_SupplierPlant.SupplierPlantContactPersonName)" Width="160" HeaderText="Contact Person Name" AllowFiltering="true"></GridColumn>
        <GridColumn Field="@nameof(Temp_SupplierPlant.SupplierPlantContactNumber)" Width="160" HeaderText="Contact Number" AllowFiltering="true"></GridColumn>
        <GridColumn Field="@nameof(Temp_SupplierPlant.SupplierPlantEmailID)" Width="160"  HeaderText="Email ID" AllowFiltering="true"></GridColumn>
        
    </GridColumns>
</SfGrid>
</div>
<br />
<div class="row" style="text-align:center">
    <div class="col-md-3 col-sm-3 col-lg-3 margin">
       <button  class="btn btn-primary e-btn:hover e-success" style="background-color:blueviolet; border-radius:10px; color:aliceblue; margin-bottom:40px;" @onclick="Save">
                 Save Supplier Plant</button>
    </div>
       
</div>
 <style>
    .e-headercell{
        
       color:indigo;
        font-size: 125px;
    }
</style>

@code {

    public List<Supplier> Suppliers { get; set; }
    public List<State> States { get; set; }
    public List<Temp_SupplierPlant> Temp_SupplierPlants { get; set; }
    public int supplierid;

    protected override async Task OnInitializedAsync()
    {
        Suppliers = await Task.Run(() => supplierservice.GetSuppliers());
        States = await Task.Run(() => stateservice.GetStates());
        Temp_SupplierPlants = await Task.Run(() => temp_supplierplantservice.GetTempSupplierPlants());
    }

    Supplier supplier = new Supplier();
    State state = new State();
    Temp_SupplierPlant temp_supplierplant = new Temp_SupplierPlant();


    private async void HandleValidSubmit1()
    {
        temp_supplierplant.CreatedBy = "Apurva";
        temp_supplierplant.CreationTime=DateTime.Now;
        try
        {
            await temp_supplierplantservice.AddTempSupplierPlant(temp_supplierplant);
            await _context.SaveChangesAsync();

            Temp_SupplierPlants = await Task.Run(() => temp_supplierplantservice.GetTempSupplierPlants());
            base.StateHasChanged();
        }
        catch
        {
            base.StateHasChanged();
        }
        temp_supplierplant = new Temp_SupplierPlant();
        base.StateHasChanged();
    }

    private async void Save()
    {
        try
        {
            supplier.CreatedBy="a";
            supplier.CreationTime = DateTime.Now;
            await supplierservice.AddSupplier(supplier);
            supplierid = supplier.SupplierID;
            await _context.SaveChangesAsync();
        }
        catch
        {
            base.StateHasChanged();
        }
        supplier = new Supplier();
        state = new State();
        base.StateHasChanged();

        foreach (var temp_Supplierplant in Temp_SupplierPlants)
        {
            SupplierPlant supplierp = new SupplierPlant();
            {
                supplierp.SupplierID = supplierid;
                supplierp.SupplierPlantName = temp_Supplierplant.SupplierPlantName;
                supplierp.SupplierPlantAddress = temp_Supplierplant.SupplierPlantAddress;
                supplierp.SupplierPlantCity = temp_Supplierplant.SupplierPlantCity;
                supplierp.SupplierPlantContactPersonName = temp_Supplierplant.SupplierPlantContactPersonName;
                supplierp.SupplierPlantContactNumber = temp_Supplierplant.SupplierPlantContactNumber;
                supplierp.SupplierPlantGSTNo = temp_Supplierplant.SupplierPlantGSTNo;
                supplierp.SupplierPlantOpeningBalance = temp_Supplierplant.SupplierPlantOpeningBalance;
                supplierp.SupplierplantPANNo = temp_Supplierplant.SupplierplantPANNo;
                supplierp.SupplierPlantState = temp_Supplierplant.SupplierPlantState;
                supplierp.SupplierPlantPincode = temp_Supplierplant.SupplierPlantPincode;
                supplierp.SupplierPlantEmailID = temp_Supplierplant.SupplierPlantEmailID;
                supplierp.CreatedBy = "A";
                supplierp.CreationTime = DateTime.Now;
            };
            await supplierplantservice.AddSupplierPlant(supplierp);
            await _context.SaveChangesAsync();
            supplierp = new SupplierPlant();
            base.StateHasChanged(); 

        } 

        supplier = new Supplier();
        _context.Database.ExecuteSqlRaw("Truncate Table Tbl_Temp_SupplierPlant");
        await _context.SaveChangesAsync();
        base.StateHasChanged();

        Temp_SupplierPlants = await Task.Run(() => temp_supplierplantservice.GetTempSupplierPlants());
        await _context.SaveChangesAsync();
        base.StateHasChanged(); 
    }
}
@code{
    public string  state_name { get; set; }

    protected void showdata()
    {
        supplier.State = state_name;

    }
     
    public string  plant_state_name { get; set; }
     protected void showdata1()
    {
        temp_supplierplant.SupplierPlantState = plant_state_name;

    }
}
<style>
    .margin{
        margin-left:auto;
        margin-right:auto;
      
    }
   
</style>