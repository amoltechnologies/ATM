@page "/CustomerCreation"
@inject CustomerService customerservice
@inject CustomerPlantService customerplantservice
@inject StateService stateservice
@inject Temp_CustomerPlantService temp_customerplantservice
@inject ATM.Data.ApplicationDbContext _context
@using FluentValidation
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Cards
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.DropDowns
@using ATM.Models
@using ATM.Data
@using Microsoft.EntityFrameworkCore

<head>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@300&display=swap" rel="stylesheet">
</head> 

  <div class="col-12" style="background-color:blueviolet; border-radius:10px; border-bottom:double; border-left:double; border-bottom-color:#51005E">
        <h4 style="padding-left:1%; font-weight:600; padding-right:1%; padding-top:1%; color:white; font-size:17px">Let's create A Customer</h4>
    </div><br /><br />
<EditForm Model=@customer >
     @*<DataAnnotationsValidator />*@
          <FluentValidationValidator TValidator="CustomerFluentvalidation" />
    <div class="row">
        <div class=" margin col-md-3 col-lg-3   ">
            <br />
            Customer Name <br />
           
            <SfTextBox ID="CustomerName" @bind-Value="customer.CustomerName" ></SfTextBox>
           
             <br />
             </div>
       
        <div class="margin col-md-3 col-lg-3" >
       
             <br />
            State <br />
        <SfDropDownList  TValue="string" ID="state" TItem="State" @bind-Value="state_name" DataSource="@States">
            <DropDownListFieldSettings Value="StateName"></DropDownListFieldSettings>
             <DropDownListEvents TValue="string" TItem="State" ValueChange="showdata"></DropDownListEvents>
        </SfDropDownList>
         <br />
       
         </div>
         <div class="margin col-md-3 col-lg-3 col-sm-3; ">
             <br />
         Pincode <br />
             <SfTextBox   ID="Pincode"  @bind-Value="customer.PINCode"></SfTextBox>
             <br />
         </div>
     </div>
     <div class="row">
         <div class=" margin col-md-3">
             <ValidationMessage For="@(() => customer.CustomerName)" ></ValidationMessage>
       
         </div>
        @*  <div class=" margin col-md-3">
             <ValidationMessage For="@(() => customer.State)" ></ValidationMessage>
          
         </div>*@
          <div class=" margin col-md-3">
             <ValidationMessage For="@(() => customer.PINCode)" ></ValidationMessage>
     
         </div>
     </div>
     
     <div class="row">
         <div class="margin col-md-3 col-lg-3 col-sm-3; ">
             <br />
         City <br />
             <SfTextBox   ID="city"  @bind-Value="customer.City"></SfTextBox>
             <br />
         </div>

         <div class="margin col-md-3 col-lg-3 col-sm-3; ">
             <br />
         Email ID <br />
             <SfTextBox   ID="email"  @bind-Value="customer.EmailID"></SfTextBox>
             <br />
         </div>
         <div class="margin col-md-3 col-lg-3 col-sm-3; ">
             <br />
             Address 
             <SfTextBox  Multiline="true"  ID="add"  @bind-Value="customer.Address"></SfTextBox>
             <br />
          </div>
    </div>
      <div class="row">
          <div class=" margin col-md-3">
             <ValidationMessage For="@(() => customer.City)" ></ValidationMessage>
       
         </div>
        
          <div class=" margin col-md-3">
             <ValidationMessage For="@(() => customer.EmailID)" ></ValidationMessage>
     
         </div>
           <div class=" margin col-md-3">
             <ValidationMessage For="@(() => customer.PANNo)" ></ValidationMessage>
          
         </div>
     </div>
     

      <div class="row ">
            
          
            <div class="margin col-md-3 col-lg-3 col-sm-3;  ">
             <br />
            GST No.
            <SfTextBox ID="CustomerName" @bind-Value="customer.GSTNo"></SfTextBox>
             <br />
            </div>
                 <div class="margin col-md-3 col-lg-3 col-sm-3;  ">
             <br />
            Opening Balance
            <SfNumericTextBox TValue="decimal?" @bind-Value=customer.OpeningBalance ></SfNumericTextBox>
             <br />
            </div>
            <div class=" margin col-md-3 col-lg-3 col-sm-3;  ">
            <br />
            PAN No.
                 <SfTextBox ID="CustomerName"  @bind-Value="customer.PANNo"></SfTextBox>
             <br />
         
        </div>
             
       
      </div>
      <div class="row">
          <div class=" margin col-md-3">
             <ValidationMessage For="@(() => customer.GSTNo)" ></ValidationMessage>
       
         </div>
        
          <div class=" margin col-md-3">
             <ValidationMessage For="@(() => customer.OpeningBalance)" ></ValidationMessage>
     
         </div>
           <div class=" margin col-md-3">
             <ValidationMessage For="@(() => customer.Address)" ></ValidationMessage>
          
         </div>
     </div>
     
      <div class="row">
            <div class="margin col-md-3 col-lg-3 col-sm-3;  ">
             <br />
             Primary Contact Name
            <SfTextBox ID="CustomerName"  @bind-Value="customer.PrimaryContactPersonName"></SfTextBox>

             <br />
            </div>
                  <div class=" margin col-md-3 col-lg-3 col-sm-3;  ">
            <br />
             Contact Person Contact No.
              <SfTextBox ID="CustomerName"  @bind-Value="customer.PrimaryContactPersonContact"></SfTextBox>
             <br />
       
            </div>
            <div class="margin col-md-3 col-lg-3 col-sm-3;  ">
             <br />
                 Vendor Code
                 <SfTextBox @bind-Value="customer.VendorCode"></SfTextBox>
             <br />
         </div>
     </div>
     <div class="row">
          <div class=" margin col-md-3">
             <ValidationMessage For="@(() => customer.PrimaryContactPersonName)" ></ValidationMessage>
       
         </div>
        
          <div class=" margin col-md-3">
             <ValidationMessage For="@(() => customer.PrimaryContactPersonContact)" ></ValidationMessage>
     
         </div>
           
     </div>
@*      <div class="row">
             <div class=" margin col-md-3 col-lg-3 col-sm-3;  ">
            <br />
            
            </div>
            <div class="margin col-md-3 col-lg-3 col-sm-3;  " style="text-align:center">
             <br />
            
            <button class="btn btn-primary e-btn:hover e-success" style="background-color:blueviolet; color:aliceblue; margin-bottom:40px;" type="submit">
                 Create Customer</button>
 
            </div>
            <div class="margin col-md-3 col-lg-3 col-sm-3; ">
             <br />
           </div>
     </div>*@
</EditForm>
<br /><br />
<div class="col-12" style="background-color:blueviolet; border-radius:10px; border-bottom:double; border-left:double; border-bottom-color:#51005E">
        <h4 style="padding-left:1%; font-weight:600; padding-right:1%; padding-top:1%; color:white; font-size:17px"> Add Customer Plant</h4>
    </div><br />
     <div class="row">
        <div class="row">
                        <div class=" margin col-md-3  ">
                            <br />
                           Plant Name
                           <SfTextBox  ID="PlantNamere" @bind-Value="temp_customerplant.CustomerPlantName" ></SfTextBox>
                           <br />

                        </div>
                         <div class=" margin col-md-3  ">
                            <br />
                           Plant Address
                           <SfTextBox  ID="PlantAddress" @bind-Value="temp_customerplant.CustomerPlantAddress" ></SfTextBox>
                           <br />
                        </div>
                         <div class=" margin  col-md-3 ">
                            <br />
                            Plant City
                            <SfTextBox  ID="PlantCity" @bind-Value="temp_customerplant.CustomerPlantCity" ></SfTextBox>
                            <br />

                        </div>
                    
                </div>
                <div class="row">
                    <div class=" margin  col-md-3"> 
                        <br />
                        Plant State

                        <SfDropDownList  TValue="string" ID="cplantstate" TItem="State" @bind-Value="plant_state_name" DataSource="@States">
                        <DropDownListFieldSettings Value="StateName"></DropDownListFieldSettings>
                        <DropDownListEvents TValue="string" TItem="State" ValueChange="showdata1"></DropDownListEvents>
                        </SfDropDownList>

                       
                 
                    </div>

                    <div class=" margin  col-md-3"> 
                        <br />
                        Plant Pincode
                       <SfTextBox  ID="PlantPincode" @bind-Value="temp_customerplant.CustomerPlantPincode" ></SfTextBox>
                        <br />       
                     
                    </div>

                    <div class=" margin  col-md-3">
                        <br />
                          Vendor Code
                          <SfTextBox  ID="VendorCode" @bind-Value="temp_customerplant.VendorCode" ></SfTextBox>
                          <br />
                    </div>
                </div>
                <div class="row">
                    <div class= "margin  col-md-3">
                        <br />
                        Plant PAN No.
                       <SfTextBox  ID="PlantPANNo." @bind-Value="temp_customerplant.CustomerPlantPANNo" ></SfTextBox>
                       <br />
                    </div>
                    <div class= "margin  col-md-3">
                        <br />
                        GST No.
                          <SfTextBox  ID="PlantGSTNo" @bind-Value="temp_customerplant.CustomerPlantGSTNo" ></SfTextBox>
                        <br />
                    </div>
                    <div class= "margin  col-md-3">
                        <br />
                        Plant Opening Balance
                        <SfNumericTextBox TValue="decimal?" @bind-Value=temp_customerplant.CustomerPlantOpeningBalance ></SfNumericTextBox>
                        <br />
                    </div>
                </div>
                <div class="row">
                    <div class="margin  col-md-3">
                        <br />
                        Contact Person Name
                        <SfTextBox  ID="ContactPersonName" @bind-Value="temp_customerplant.CustomerPlantContactPersonName" ></SfTextBox>
                        <br />
                    </div>
                    <div class="margin  col-md-3">
                        <br />
                        Contact Number
                        <SfTextBox  ID="PlantContactNumbar" @bind-Value="temp_customerplant.CustomerPlantContactNumber" ></SfTextBox>
                        <br />
                    </div>
                    <div class="margin  col-md-3">
                        <br />
                        Email ID
                        <SfTextBox  ID="PlantEmailID" @bind-Value="temp_customerplant.CustomerPlantEmailID" ></SfTextBox>
                        <br />
                    </div>
                </div>
               
             <div class="row">
             <div class=" margin col-md-3 col-lg-3 col-sm-3;  ">
            <br />
            
            </div>
            <div class="margin col-md-3 col-lg-3 col-sm-3;  " style="text-align:center">
             <br />
              <button  class="btn btn-primary e-btn:hover e-success" style="background-color:blueviolet; font-weight:600; border-radius:10px; color:aliceblue; margin-bottom:40px;" @onclick="HandleValidSubmit">
                 Add Customer Plant</button>
             
            </div>
            <div class="margin col-md-3 col-lg-3 col-sm-3; ">
             <br />
           </div>
            </div>
       
     </div>
     
     <br />
@code{ 
        SfTextBox upload; 
 
        public void onCreateUpload() 


        { 
            this.upload.AddIcon("prepend", "e-upload"); 
        } 
    } 
    <style> 
 
        .e-upload:before { 
            content: '\e99a'; 
            font-family: "e-icons"; 
        } 
        .e-upload{ 
            width:auto; 
        } 
    </style> 
<div class="col-12" style="background-color:blueviolet; border-radius:10px; border-bottom:double; border-left:double; border-bottom-color:#51005E">
        <h4 style="padding-left:1%; font-weight:600; padding-right:1%; padding-top:1%; color:white; font-size:17px">  Customer Plant Summary</h4>
    </div><br />

<div style="margin-left:auto; margin-right:auto;">
<SfGrid ID="Temp_ProcessPlanGrid" Width="auto" 
       DataSource="@TempCutomerPlants"  >

    <GridPageSettings PageSize="5"></GridPageSettings>
    <GridEvents   TValue="Temp_CustomerPlant">
    </GridEvents>
    
    <GridColumns >
        <GridColumn  Field="@nameof(Temp_CustomerPlant.id)" HeaderText="Sr.No." Width="auto" AllowFiltering="true"></GridColumn>

        <GridColumn Field="@nameof(Temp_CustomerPlant.CustomerPlantName)" Width="170" HeaderText="Plant Name" AllowFiltering="true" ></GridColumn>
        <GridColumn Field="@nameof(Temp_CustomerPlant.CustomerPlantAddress)" Width="170" HeaderText="Plant Address" AllowFiltering="true"></GridColumn>
        <GridColumn Field="@nameof(Temp_CustomerPlant.CustomerPlantCity)" Width="170" HeaderText="City" AllowFiltering="true"></GridColumn>
        <GridColumn Field="@nameof(Temp_CustomerPlant.CustomerPlantState)" Width="170" HeaderText="State" AllowFiltering="true"></GridColumn>
        <GridColumn Field="@nameof(Temp_CustomerPlant.CustomerPlantPincode)" Width="170" HeaderText="Pincode" AllowFiltering="true"></GridColumn>
        <GridColumn Field="@nameof(Temp_CustomerPlant.VendorCode)" Width="170" HeaderText="Vendor Code" AllowFiltering="true"></GridColumn>
        <GridColumn Field="@nameof(Temp_CustomerPlant.CustomerPlantGSTNo)" Width="170" HeaderText="GST No." AllowFiltering="true"></GridColumn>
        <GridColumn Field="@nameof(Temp_CustomerPlant.CustomerPlantPANNo)" Width="170" HeaderText="PAN No." AllowFiltering="true"></GridColumn>
        <GridColumn Field="@nameof(Temp_CustomerPlant.CustomerPlantEmailID)" Width="170" HeaderText="Email ID" AllowFiltering="true"></GridColumn>
        <GridColumn Field="@nameof(Temp_CustomerPlant.CustomerPlantOpeningBalance)" Width="170" HeaderText="Opening Balance" AllowFiltering="true"></GridColumn>
        <GridColumn Field="@nameof(Temp_CustomerPlant.CustomerPlantContactPersonName)" Width="170" HeaderText="Contact Person Name" AllowFiltering="true"></GridColumn>
        <GridColumn Field="@nameof(Temp_CustomerPlant.CustomerPlantContactNumber)" Width="170" HeaderText="Contact Number" AllowFiltering="true"></GridColumn>
    </GridColumns>
</SfGrid>
</div>
<br /><br />
<div class="row" style="text-align:center">
    <div class="col-md-3 col-sm-3 col-lg-3 margin">
        <button  class="btn btn-primary e-btn:hover e-success" style="background-color:blueviolet; border-radius:10px; font-weight:600; color:aliceblue; margin-bottom:40px;" @onclick = "@Save">
              Save Customer Plant</button>
    </div>
       
</div>

     <style>
    .e-headercell{
        
       color:indigo;
        font-size: 125px;
    }
    </style>


@code {
    public List<Customer> Customers { get; set; }
    public List<CustomerPlant> CustomerPlants { get; set; }
    public List<State> States { get; set; }
    public List<Temp_CustomerPlant> TempCutomerPlants { get; set; }
    public int cust;  

    protected override async Task OnInitializedAsync()
    {
        Customers = await Task.Run(() => customerservice.GetCustomers());
        CustomerPlants = await Task.Run(() => customerplantservice.GetCustomerPlants());
        States = await Task.Run(() => stateservice.GetStates());
        TempCutomerPlants = await Task.Run(() => temp_customerplantservice.GetCustomerPlants());
    }

    Customer customer = new Customer();
    CustomerPlant customerplant = new CustomerPlant();
    State state = new State();
    Temp_CustomerPlant temp_customerplant = new Temp_CustomerPlant();



    private async void HandleValidSubmit()
    {

        temp_customerplant.CreatedBy="A";
        temp_customerplant.CreationTime = DateTime.Now;
        try
        {
            await temp_customerplantservice.AddCustomerPlant(temp_customerplant);

            await _context.SaveChangesAsync();

            TempCutomerPlants = await Task.Run(() => temp_customerplantservice.GetCustomerPlants());
            base.StateHasChanged();


        }
        catch
        {
            base.StateHasChanged();
        }

        state = new State();
        base.StateHasChanged();
        temp_customerplant = new Temp_CustomerPlant();
        base.StateHasChanged();
    }

    private async void Save()
    {
        try
        {
             customer.CreatedBy = "A";
             customer.CreationTime = DateTime.Now;
            await customerservice.AddCustomer(customer);
            cust = customer.CustomerID;
            await _context.SaveChangesAsync();

        }
        catch
        {
            base.StateHasChanged();
        }
        customer = new Customer();
        base.StateHasChanged();

        state = new State();
        base.StateHasChanged();

        foreach (var temp_customerplant in TempCutomerPlants)
        {
            CustomerPlant customerp = new CustomerPlant();
            {
                customerp.CustomerID = cust;
                customerp.CustomerPlantName = temp_customerplant.CustomerPlantName;
                customerp.CustomerPlantAddress = temp_customerplant.CustomerPlantAddress;
                customerp.VendorCode = temp_customerplant.VendorCode;
                customerp.CustomerPlantCity = temp_customerplant.CustomerPlantCity;
                customerp.CustomerPlantContactPersonName = temp_customerplant.CustomerPlantContactPersonName;
                customerp.CustomerPlantContactNumber = temp_customerplant.CustomerPlantContactNumber;
                customerp.CustomerPlantGSTNo = temp_customerplant.CustomerPlantGSTNo;
                customerp.CustomerPlantOpeningBalance = temp_customerplant.CustomerPlantOpeningBalance;
                customerp.CustomerPlantPANNo = temp_customerplant.CustomerPlantPANNo;
                customerp.CustomerPlantState = temp_customerplant.CustomerPlantState;
                customerp.CustomerPlantPincode = temp_customerplant.CustomerPlantPincode;
                customerp.CustomerPlantEmailID = temp_customerplant.CustomerPlantEmailID;
                customerp.CreatedBy = "A";
                customerp.CreationTime = DateTime.Now;
            };
            await customerplantservice.AddCustomerPlant(customerp);
            await _context.SaveChangesAsync();
            customerp = new CustomerPlant();
            base.StateHasChanged(); 

        } 
        var custom = new Customer();

        _context.Database.ExecuteSqlRaw("Truncate Table Tbl_Temp_CustomerPlant");
        await _context.SaveChangesAsync();

        TempCutomerPlants = await Task.Run(() => temp_customerplantservice.GetCustomerPlants());
        await _context.SaveChangesAsync();
        base.StateHasChanged(); 

    }
    private async void HandleValidSubmit1()
    {
        
    }
   
}
@code{
    public string  plant_state_name { get; set; }

        protected void showdata1()
        {
            temp_customerplant.CustomerPlantState = plant_state_name;
       
        }
}
@code{
    public string  state_name { get; set; }

    protected void showdata()
    {
        customer.State = state_name;
       
    }
}
@*Dialog*@
@code {
    private bool IsVisible { get; set; } = false;

    private void OpenDialog()
    {
        this.IsVisible = true;
    }

    private void CloseDialog()
    {
        this.IsVisible = false;
    }
}
<style>
    .margin{
        margin-left:auto;
        margin-right:auto;
  
    }
   
</style>
