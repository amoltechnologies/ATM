@page "/QualityParameterReport"

@using ATM.Models
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Data

@inject QualityParameterService qualityparameterservice
@inject ProcessPlanService processplanservice
@inject FinishedGoodsService finishedgoodsservice
@inject ATM.Data.ApplicationDbContext _context

 <div class="col-12" style="background-color:blueviolet; border-radius:10px; border-bottom:double; border-left:double; border-bottom-color:#51005E">
        <h4 style="padding-left:1%; font-weight:600; padding-right:1%; padding-top:1%; color:white; font-size:17px">  Quality Parameter Report</h4>
    </div><br />

<SfGrid DataSource="@ProcessPlans" AllowFiltering="true" AllowGrouping="true" AllowSorting="true">
 <GridTemplates>
        <DetailTemplate>
            @{
                var pp = (context as ProcessPlan);
                      <SfGrid Width="auto" TValue="QualityParameter" Query="@GetQualityParameterQuery(pp)" DataSource="@QualityParameters" >
                              <GridColumns>

                              <GridColumn Field=@nameof(QualityParameter.QualityParameterName) HeaderText="Quality Parameter Name" Width="auto"></GridColumn>
                              <GridColumn Field=@nameof(QualityParameter.UnitName) HeaderText="Unit" Width="auto"></GridColumn>
                              <GridColumn Field=@nameof(QualityParameter.OperationName) Width="auto" HeaderText="Operation Name"></GridColumn>
                              <GridColumn Field=@nameof(QualityParameter.Value) Width="auto" HeaderText="Value"></GridColumn>
       
                              </GridColumns>
                      </SfGrid>
            }
        </DetailTemplate>
    </GridTemplates>
    <GridColumns>
          <GridForeignColumn Field="@nameof(ProcessPlan.FinishedGoodsID)" HeaderText="Finished Goods Name" ForeignDataSource="FinishedGood" ForeignKeyValue="FG_Name" Width="160" ></GridForeignColumn>
            <GridColumn Field=@nameof(ProcessPlan.ProcessPlanName) HeaderText="Process Plan Name" Width="160"> </GridColumn>
            <GridColumn Field=@nameof(ProcessPlan.ProcessPlanDescription) HeaderText="Description" Width="160"> </GridColumn>
            <GridColumn Field=@nameof(ProcessPlan.OutputName) HeaderText="Output Name" Width="160"> </GridColumn>
            <GridColumn Field=@nameof(ProcessPlan.ProcessOutputWeight) HeaderText="Output Weight" Width="160"> </GridColumn>
            <GridColumn Field=@nameof(ProcessPlan.ProcessOutputUnit) HeaderText="Output Unit" Width="160"> </GridColumn>
            <GridColumn Field=@nameof(ProcessPlan.ProcessScrapQuantity) HeaderText="Scrap Quantity" Width="160"> </GridColumn>
            <GridColumn Field=@nameof(ProcessPlan.IsFinalProcess) HeaderText="Is Final Process" Width="160"> </GridColumn>
            
     </GridColumns>
</SfGrid>
<style>
    .e-headercell{
        
       color:indigo;
        font-size: 125px;
    }
</style>
@code {

    public List<QualityParameter> QualityParameters { get; set; }
    public List<FinishedGoods> FinishedGood { get; set; }
    public List<ProcessPlan> ProcessPlans { get; set; }
    SfGrid<QualityParameter> QualityParameterGrid { get; set; }

    protected override async Task OnInitializedAsync()
    {
        QualityParameters = await Task.Run(() => qualityparameterservice.GetQualityParameters());
        FinishedGood = await Task.Run(() => finishedgoodsservice.GetFinishedGoods());
        ProcessPlans = await Task.Run(() => processplanservice.GetProcessPlans());
    }

    public Query GetQualityParameterQuery(ProcessPlan pp)
    {
        return new Query().Where("ProcessPlanID", "equal", pp.ProcessPlanID);
    }

    public async void ActionBeginHandler(ActionEventArgs<QualityParameter> Args)
    {
        if (Args.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Save))
        {
            if (Args.Action == "Add")
            {
                await qualityparameterservice.AddQualityParameter (Args.Data);
                QualityParameters = (await qualityparameterservice.GetQualityParameters()).ToList();
            }
            else
            {
                await qualityparameterservice.UpdateQualityParameter(Args.Data);
                QualityParameters = (await qualityparameterservice.GetQualityParameters()).ToList();
            }
        }
        if (Args.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Delete))
        {
            await qualityparameterservice.DeleteQualityParameter(Args.Data.QualityParameterID);
        }
    }

}
